name: 'icestudio'

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 3,6'

env:
  CI: true
  DOCKER_BUILDKIT: 1

jobs:
  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - uses: buildthedocs/btd@v0
        with:
          token: ${{ github.token }}

      - uses: actions/upload-artifact@v2
        with:
          name: docs
          path: docs/_build/html

  linwin:
    needs: [doc]
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        task:
          [
            {os: ubuntu, arg: lin, larg: linux},
            {os: windows, arg: win, larg: win},
          ]
    runs-on: ${{ matrix.task.os }}-latest
    steps:
      - run: git config --global core.autocrlf input
        shell: bash

      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - run: yarn

      - run: yarn run check

      - uses: actions/download-artifact@v2
        with:
          name: docs
          path: docs/_build/html

      - run: yarn dist -v
        env:
          DIST_TARGET: ${{ matrix.task.arg }}

      - uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.task.arg }}64
          path: dist/*${{ matrix.task.larg }}64.zip

      - uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.task.arg }}32
          path: dist/*${{ matrix.task.larg }}32.zip

  mac:
    needs: [doc]
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os: [{ver: '10.15', name: Catalina}, {ver: '11.0', name: BigSur}]
    runs-on: macos-${{ matrix.os.ver }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - run: yarn

      - run: yarn run check

      - uses: actions/download-artifact@v2
        with:
          name: docs
          path: docs/_build/html

      - run: yarn dist -v
        env:
          DIST_TARGET: osx

      - uses: actions/upload-artifact@master
        with:
          name: osx64-${{ matrix.os.name }}
          path: dist/*osx64.zip

  nightly:
    needs: [linwin, mac]
    if: github.ref == 'refs/heads/moon' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2

      - name: Append GITHUB_SHA to release assets
        run: |
          for item in lin32/* lin64/* win32/* win64/*; do
            mv "$item" "${item%.*}-${GITHUB_SHA}.zip"
          done
          for name in Catalina BigSur; do
            item="$(ls osx64-$name/*)"
            mv "$item" "${item%.*}-$name-${GITHUB_SHA}.zip"
          done

      - uses: eine/tip@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'nightly'
          rm: true
          files: |
            lin32/*
            lin64/*
            win32/*
            win64/*
            osx64-Catalina/*
            osx64-BigSur/*

#---

# Generated artifacts (depending on the platform) are:
# - dist/*.zip
# - dist/*.AppImage
# - dist/*.exe
# - dist/*.dmg
